// <auto-generated />
using System;
using GUIs.Models.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GUIs.Migrations
{
    [DbContext(typeof(QLVLContext))]
    partial class QLVLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GUIs.Models.EF.CongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alias");

                    b.Property<DateTime?>("Finish")
                        .HasColumnType("datetime")
                        .HasColumnName("finish");

                    b.Property<int?>("Idnguoituyendung")
                        .HasColumnType("int")
                        .HasColumnName("idnguoituyendung");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<int?>("Maxtuoi")
                        .HasColumnType("int")
                        .HasColumnName("maxtuoi");

                    b.Property<int?>("Mintuoi")
                        .HasColumnType("int")
                        .HasColumnName("mintuoi");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int?>("Salary")
                        .HasColumnType("int")
                        .HasColumnName("salary");

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<DateTime?>("Timework")
                        .HasColumnType("datetime")
                        .HasColumnName("timework");

                    b.HasKey("Id");

                    b.HasIndex("Idnguoituyendung");

                    b.ToTable("CONG_VIEC", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.CongViecNhom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Idcongviec")
                        .HasColumnType("int")
                        .HasColumnName("idcongviec");

                    b.Property<int?>("Idnhomcongviec")
                        .HasColumnType("int")
                        .HasColumnName("idnhomcongviec");

                    b.HasKey("Id");

                    b.HasIndex("Idcongviec");

                    b.HasIndex("Idnhomcongviec");

                    b.ToTable("CONG_VIEC_NHOM", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.DangKyNhomCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Idnguoilaodong")
                        .HasColumnType("int")
                        .HasColumnName("idnguoilaodong");

                    b.Property<int?>("Idnhomcongviec")
                        .HasColumnType("int")
                        .HasColumnName("idnhomcongviec");

                    b.HasKey("Id");

                    b.HasIndex("Idnguoilaodong");

                    b.HasIndex("Idnhomcongviec");

                    b.ToTable("DANG_KY_NHOM_CONG_VIEC", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.GopY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Noidung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("noidung");

                    b.HasKey("Id");

                    b.ToTable("GOP_Y", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.NguoiLaoDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fanpage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("fanpage");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("guid");

                    b.Property<string>("Heath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("heath");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("Introduce")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("introduce");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Refcode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refcode");

                    b.Property<int?>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("sex");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("NGUOI_LAO_DONG", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.NguoiTuyenDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Actived")
                        .HasColumnType("int")
                        .HasColumnName("actived");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Diachi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diachi");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fanpage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fanpage");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("Introduce")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("introduce");

                    b.Property<DateTime?>("Lastlogin")
                        .HasColumnType("datetime")
                        .HasColumnName("lastlogin");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<int?>("Locked")
                        .HasColumnType("int")
                        .HasColumnName("locked");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Sdt")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sdt");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("NGUOI_TUYEN_DUNG", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.NhomCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.HasKey("Id");

                    b.ToTable("NHOM_CONG_VIEC", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.UngTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Apply")
                        .HasColumnType("int")
                        .HasColumnName("apply");

                    b.Property<int?>("Danhgiacongviec")
                        .HasColumnType("int")
                        .HasColumnName("danhgiacongviec");

                    b.Property<int?>("Danhgialaodong")
                        .HasColumnType("int")
                        .HasColumnName("danhgialaodong");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int?>("Idcongviec")
                        .HasColumnType("int")
                        .HasColumnName("idcongviec");

                    b.Property<int?>("Idnguoilaodong")
                        .HasColumnType("int")
                        .HasColumnName("idnguoilaodong");

                    b.Property<string>("Nhanxetcongviec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nhanxetcongviec");

                    b.Property<string>("Nhanxetlaodong")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nhanxetlaodong");

                    b.Property<int?>("Salary")
                        .HasColumnType("int")
                        .HasColumnName("salary");

                    b.HasKey("Id");

                    b.HasIndex("Idcongviec");

                    b.HasIndex("Idnguoilaodong");

                    b.ToTable("UNG_TUYEN", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("password");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("state");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("GUIs.Models.EF.CongViec", b =>
                {
                    b.HasOne("GUIs.Models.EF.NguoiTuyenDung", "IdnguoituyendungNavigation")
                        .WithMany("CongViecs")
                        .HasForeignKey("Idnguoituyendung")
                        .HasConstraintName("FK_CONG_VIEC_NGUOI_TUYEN_DUNG");

                    b.Navigation("IdnguoituyendungNavigation");
                });

            modelBuilder.Entity("GUIs.Models.EF.CongViecNhom", b =>
                {
                    b.HasOne("GUIs.Models.EF.CongViec", "IdcongviecNavigation")
                        .WithMany("CongViecNhoms")
                        .HasForeignKey("Idcongviec")
                        .HasConstraintName("FK_CONG_VIEC_NHOM_CONG_VIEC");

                    b.HasOne("GUIs.Models.EF.NhomCongViec", "IdnhomcongviecNavigation")
                        .WithMany("CongViecNhoms")
                        .HasForeignKey("Idnhomcongviec")
                        .HasConstraintName("FK_CONG_VIEC_NHOM_NHOM_CONG_VIEC");

                    b.Navigation("IdcongviecNavigation");

                    b.Navigation("IdnhomcongviecNavigation");
                });

            modelBuilder.Entity("GUIs.Models.EF.DangKyNhomCongViec", b =>
                {
                    b.HasOne("GUIs.Models.EF.NguoiLaoDong", "IdnguoilaodongNavigation")
                        .WithMany("DangKyNhomCongViecs")
                        .HasForeignKey("Idnguoilaodong")
                        .HasConstraintName("FK_DANG_KY_NHOM_CONG_VIEC_NGUOI_LAO_DONG");

                    b.HasOne("GUIs.Models.EF.NhomCongViec", "IdnhomcongviecNavigation")
                        .WithMany("DangKyNhomCongViecs")
                        .HasForeignKey("Idnhomcongviec")
                        .HasConstraintName("FK_DANG_KY_NHOM_CONG_VIEC_NHOM_CONG_VIEC");

                    b.Navigation("IdnguoilaodongNavigation");

                    b.Navigation("IdnhomcongviecNavigation");
                });

            modelBuilder.Entity("GUIs.Models.EF.UngTuyen", b =>
                {
                    b.HasOne("GUIs.Models.EF.CongViec", "IdcongviecNavigation")
                        .WithMany("UngTuyens")
                        .HasForeignKey("Idcongviec")
                        .HasConstraintName("FK_UNG_TUYEN_CONG_VIEC");

                    b.HasOne("GUIs.Models.EF.NguoiLaoDong", "IdnguoilaodongNavigation")
                        .WithMany("UngTuyens")
                        .HasForeignKey("Idnguoilaodong")
                        .HasConstraintName("FK_UNG_TUYEN_NGUOI_LAO_DONG");

                    b.Navigation("IdcongviecNavigation");

                    b.Navigation("IdnguoilaodongNavigation");
                });

            modelBuilder.Entity("GUIs.Models.EF.CongViec", b =>
                {
                    b.Navigation("CongViecNhoms");

                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("GUIs.Models.EF.NguoiLaoDong", b =>
                {
                    b.Navigation("DangKyNhomCongViecs");

                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("GUIs.Models.EF.NguoiTuyenDung", b =>
                {
                    b.Navigation("CongViecs");
                });

            modelBuilder.Entity("GUIs.Models.EF.NhomCongViec", b =>
                {
                    b.Navigation("CongViecNhoms");

                    b.Navigation("DangKyNhomCongViecs");
                });
#pragma warning restore 612, 618
        }
    }
}
